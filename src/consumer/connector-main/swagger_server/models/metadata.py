# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, type: str = None, value: object = None):  # noqa: E501
        """Metadata - a model defined in Swagger

        :param type: The type of this Metadata.  # noqa: E501
        :type type: str
        :param value: The value of this Metadata.  # noqa: E501
        :type value: object
        """
        self.swagger_types = {
            'type': str,
            'value': object
        }

        self.attribute_map = {
            'type': 'type',
            'value': 'value'
        }
        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Metadata of this Metadata.  # noqa: E501
        :rtype: Metadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this Metadata.


        :return: The type of this Metadata.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Metadata.


        :param type: The type of this Metadata.
        :type type: str
        """

        self._type = type

    @property
    def value(self) -> object:
        """Gets the value of this Metadata.


        :return: The value of this Metadata.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value: object):
        """Sets the value of this Metadata.


        :param value: The value of this Metadata.
        :type value: object
        """

        self._value = value
