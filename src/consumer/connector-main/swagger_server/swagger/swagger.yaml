openapi: 3.0.0
info:
  title: CADDE v3 Specification 利用者 コネクタメイン
  version: "3.0"
servers:
- url: /
paths:
  /api/3/action/package_search:
    get:
      tags:
      - Search
      summary: API. カタログ検索
      description: |-
        提供者カタログサイトからCKANカタログ情報を取得する。

        Response:
        * 処理が成功した場合は200を返す。
        * 処理に失敗した場合は、2xx以外のコードを返す。 Responsesセクション参照。
      operationId: search
      parameters:
      - name: q
        in: query
        description: |-
         CKAN検索条件クエリ
         CKAN APIに準拠
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: x-cadde-search
        in: header
        description: |-
         検索種別
         横断検索、詳細検索を指定する(横断検索:meta, 詳細検索:detail)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-cadde-provider
        in: header
        description: |-
         CADDEユーザID（提供者）
         提供者コネクタを利用する場合にCADDEユーザID（提供者）を設定する。提供者コネクタを利用しない場合はx-cadde-providerのヘッダ自体を設定しない。
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-idp-url
        in: header
        description: |-
         IdPのURL
         ユーザ認証を行うIdPのURLを設定する。
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: 利用者トークン
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: CKANから取得したカタログ情報を返す
          content:
            application/json:
              example:
                help: https:/xxx/api/3/action/help_show?name=package_search
                success: true
                result:
                  count: 0
                  sort: score desc, metadata_modified desc
                  facets: {}
                  results: {}
                  search_facets: {}
        "400":
          description: パラメータ不正の場合のエラーメッセージ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: Missing header parameter (パラメータ名)
                    status: 400
                    title: Bad Request
                    type: about:blank
        "401":
          description: |-
            認証失敗の場合のエラーメッセージ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: 利用者確認処理でエラーが発生しました。
                    status: 401
                    title: ""
                    type: ""
        "408":
          description: タイムアウトが発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 408
                    title: ""
                    type: ""
        "500":
          description: サーバーの内部処理で異常が発生した場合のエラーメッセージ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 500
                    title: ""
                    type: ""
      x-openapi-router-controller: swagger_server.controllers.search_controller
  /cadde/api/v1/file:
    get:
      tags:
      - Files
      summary: API. データ取得I/F（CADDE）
      description: |-
        CADDEインタフェースを用いて、HTTPサーバ、FTPサーバからファイルを取得する。

        Response:
        * 処理が成功した場合は200を返す。
        * 処理に失敗した場合は、2xx以外のコードを返す。 Responsesセクションを参照。
      operationId: files
      parameters:
      - name: x-cadde-resource-url
        in: header
        description: リソースURL
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-cadde-resource-api-type
        in: header
        description: |-
         リソース提供手段識別子
         FTP、HTTPのいずれかを指定する(FTP:file/ftp, HTTP:file/http)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-cadde-provider
        in: header
        description: |-
         CADDEユーザID（提供者）
         提供者コネクタを利用する場合にCADDEユーザID（提供者）を設定する。提供者コネクタを利用しない場合はx-cadde-providerのヘッダ自体を設定しない。
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-idp-url
        in: header
        description: |-
         IdPのURL
         ユーザ認証を行うIdPのURLを設定する。
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: 利用者トークン
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ダウンロードしたファイルと認証情報
          headers:
            x-cadde-provenance:
              description: 来歴管理I/Fから受領した識別情報
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                x-content-type: application/octet-stream
              example: text or csv or pdf etc..
        "400":
          description: パラメータ不正の場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: Missing header parameter (パラメータ名)
                    status: 400
                    title: Bad Request
                    type: about:blank
        "401":
          description: |-
           * 認証失敗の場合のエラーメッセージ
           * 契約状態確認処理での契約無しの場合のエラーメッセージ(2022年3月版では未使用)
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: 利用者確認処理でエラーが発生しました。
                    status: 401
                    title: ""
                    type: ""
        "403":
          description: ベーシック認証に失敗した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: 接続時に認証に失敗しました。サイト管理者に問い合わせてください。
                    status: 403
                    title: ""
                    type: ""
        "404":
          description: |-
            * FTP接続で指定したディレクトリにファイルが存在しない場合のエラーメッセージ
            * HTTPS接続で指定したURLにファイルが存在しない場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: ファイルが見つかりませんでした。サイト管理者に問い合わせてください。
                    status: 404
                    title: ""
                    type: ""
        "408":
          description: タイムアウトが発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 408
                    title: ""
                    type: ""
        "500":
          description: サーバーの内部処理で異常が発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 500
                    title: ""
                    type: ""
      x-openapi-router-controller: swagger_server.controllers.files_controller
  /v2/entities:
    get:
      tags:
      - Entities
      summary: API. データ取得(NGSI)
      description: |-
        NGSIインタフェースを用いて、コンテキスト情報を取得する。

        Response:
        * 処理が成功した場合は200を返す。
        * 処理に失敗した場合は、2xxでないコードを返す。場合によりエラーを示すペイロードがつく場合もある。  Responsesセクションを参照すること。
      operationId: retrieve_entity
      parameters:
      - name: x-cadde-resource-url
        in: header
        description: |-
         リソースURL
         指定可能なリソースURLは以下とする
         * http://{ドメイン名}/v2/entities?type={entityType}
           entityTypeで指定したtypeを持つエンティティの一覧を取得する。entityTypeを指定しない場合はエラーを返す。
         * http://{ドメイン名}/v2/entities/{entityId}
           entityIdで指定したエンティティの情報を取得する。
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-cadde-resource-api-type
        in: header
        description: |-
         リソース提供手段識別子
         NGSIを指定する(NGSI:api/ngsi)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-cadde-provider
        in: header
        description: |-
         CADDEユーザID（提供者）
         提供者コネクタを利用する場合にCADDEユーザID（提供者）を設定する。提供者コネクタを利用しない場合はx-cadde-providerのヘッダ自体を設定しない。
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-idp-url
        in: header
        description: |-
         IdPのURL
         ユーザ認証を行うIdPのURLを設定する。
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: 利用者トークン
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-cadde-options
        in: header
        description: |-
         APIごとに利用する固有のオプション
         本APIを利用するにあたり、リクエストヘッダが必要となる場合、ヘッダの内容を以下のように指定する。ただし、ヘッダの値に ,(カンマ)を含むものは指定できない。
          "x-cadde-options": "ヘッダ項目:ヘッダの値, ヘッダ項目:ヘッダの値, …"
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |-
           取得したコンテキスト情報をNGSI形式で返す（※コンテキスト情報の一覧を取得した場合は、Entityのarray型で返却する）
          headers:
            x-cadde-provenance:
              description: 来歴管理I/Fから受領した識別情報
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
              examples:
                response:
                  value:
                    type: Room
                    id: DC_S1-D41
                    temperature:
                      value: 35.6
                      type: Number
                      metadata:
                        accuracy:
                          value: 2
                          type: Number
        "400":
          description: パラメータ不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    error-message: パラメータが不正です。
        "401":
          description: データ管理サーバ（NGSI）のAPI実行時に使用するアクセストークンが不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    error-message: 認証情報が不正です。
        "404":
          description: リソースURLに指定したリソースが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    error-message: 指定したリソースが見つかりませんでした。
        "409":
          description: |-
           リクエストが競合したことを示す。
            {entityId}で指定したデータが複数存在する場合に発生する。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    error-message: 指定したリソースに対応するデータが複数存在します。
        "500":
          description: サーバーの内部処理で異常が発生した場合のエラーメッセージ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    error-message: エラーが発生しました。エラー:(エラー内容)
      x-openapi-router-controller: swagger_server.controllers.entities_controller
  /cadde/api/v1/history/lineage:
    get:
      tags:
      - Lineage
      summary: API. 来歴確認呼び出し
      description: |-
       指定された交換実績記録用リソースIDから始まる来歴情報を取得する。

        Response:
        * 処理が成功した場合は200を返す。
        * 処理に失敗した場合は、2xx以外のコードを返す。 Responsesセクションを参照。
      operationId: lineage
      parameters:
      - name: x-caddec-resource-id-for-provenance
        in: header
        description: 交換実績記録用リソースID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-direction
        in: header
        description: |-
         履歴取得方向
         [BACKWARD(=default),FORWARD, BOTH]
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: BACKWARD
      - name: x-depth
        in: header
        description: |-
         検索深度
         交換実績記録用リソースIDで指定されたイベントからの深さ。 0は、交換実績記録用リソースIDで指定されたイベントを要求します。
         正の整数は、指定されたレコードから指定された深さ以下のである全てのイベントを要求します。 -1は、指定されたイベントから到達可能な全てのイベントを要求します。
        required: false
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          description: 一致するイベント
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDLEventList'
        "400":
          description: パラメータ不正の場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: Missing header parameter (パラメータ名)
                    status: 400
                    title: Bad Request
                    type: about:blank
        "408":
          description: タイムアウトが発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 408
                    title: ""
                    type: ""
        "500":
          description: サーバーの内部処理で異常が発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 500
                    title: ""
                    type: ""
      x-openapi-router-controller: swagger_server.controllers.lineage_controller
  /cadde/api/v1/history/searchevents:
    post:
      tags:
      - Searchevents
      summary: API. 履歴ID検索呼び出し
      description: |-
       ボディ部に設定した検索条件を基に履歴情報を取得する。
       ヘッダに`content-type: application/json` を追加してください。

        Response:
        * 処理が成功した場合は200を返す。
        * 処理に失敗した場合は、2xx以外のコードを返す。 Responsesセクションを参照。
      operationId: searchevents
      requestBody:
        description: |-
          CouchDBの構文です。 右記を参照してください。 https://docs.couchdb.org/en/stable/api/database/find.html#find-selectors
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
            example:
              selector:
                cdltimestamp:
                  $gte: 2020-07-19T00:00:00+09:00
                  $lt: 2020-08-19T00:00:00+09:00
                cdldatatags:
                  $elemMatch:
                    cdlsize:
                      $gte: 1048576
        required: true
      responses:
        "200":
          description: |-
           一致するイベントのリスト（※リスト内の順序は不定な順序）
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDLEventList'
        "400":
          description: パラメータ不正の場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: Missing header parameter (パラメータ名)
                    status: 400
                    title: Bad Request
                    type: about:blank
        "408":
          description: タイムアウトが発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 408
                    title: ""
                    type: ""
        "500":
          description: サーバーの内部処理で異常が発生した場合のエラーメッセージ
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                response:
                  value:
                    detail: エラーが発生しました。エラー:(エラー内容)
                    status: 500
                    title: ""
                    type: ""
      x-openapi-router-controller: swagger_server.controllers.searchevents_controller
components:
  schemas:
    ErrorResponse:
      required:
      - detail
      - status
      type: object
      properties:
        detail:
          type: string
          description: エラーメッセージ
        status:
          type: number
          description: HTTPステータスコード
        title:
          type: string
          description: タイトル
        type:
          type: string
          description: タイプ
    Metadata:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties: {}
          example: {}
      example:
        type: type
        value: {}
    AttributeValue:
      type: object
    Attribute:
      required:
      - type
      - value
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AttributeValue'
        type:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
      example:
        metadata:
          type: type
          value: {}
        type: type
        value: {}
    Entity:
      required:
      - id
      - type
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        AttributeName:
          $ref: '#/components/schemas/Attribute'
      example:
        AttributeName:
          metadata:
            type: type
            value: {}
          type: type
          value: {}
        id: id
        type: type
    CDLDataTag:
      type: object
      properties:
        cdluri:
          type: string
          description: |-
            uri of the file.
          example: http://example.com/pa/th/ecaefa29-39af-459b-ab84-b3fa674584f6
        cdlsha256hash:
          type: string
          example: b589b63bc6217ed0be9ed63b6a88984fc61e0732bbb5a7fb05a19c7b764b9c5b
        cdlwebdavtimestamp:
          type: string
          format: date-time
          example: 2020-08-05T10:57:22+09:00
        cdlsize:
          type: integer
          format: int64
          example: 3
      additionalProperties: true
      example:
        cdluri: http://example.com/pa/th/ecaefa29-39af-459b-ab84-b3fa674584f6
        cdlwebdavtimestamp: 2020-08-05T10:57:22+09:00
        cdlsize: 3
        cdlsha256hash: b589b63bc6217ed0be9ed63b6a88984fc61e0732bbb5a7fb05a19c7b764b9c5b
    CDLEvent:
      required:
      - cdldatamodelversion
      - cdleventtype
      type: object
      properties:
        cdldatamodelversion:
          type: string
          description: version of this object. must be "2.0".
        cdleventid:
          type: string
          description: eventid of each event is optional when user registeres an event.
            if an event object does not have an eventid, cdl creates a unique id for
            the event. if user supplies with an eventid, it has to be unique within
            the cdl network. cdl will check if it is indeed unique. event object returned
            from cdl api will always have an eventid.
          example: 194430e2-0f28-4bd4-8674-6ef6ec0198b0
        cdlorganization:
          type: string
          description: name of the organization who created this event. this is assigned
            by the cdl. if you set this value in your `POST /event` request, it will
            be overwritten by the cdl.
        cdleventtype:
          type: string
          description: the nature of the event. it is recommended to define a set
            of eventtypes that are known to all organizations.
        cdltimestamp:
          type: string
        cdlpreviousevents:
          type: array
          description: list of eventids
          items:
            type: string
        cdldatatags:
          type: array
          items:
            $ref: '#/components/schemas/CDLDataTag'
      additionalProperties: true
      example:
        cdlorganization: cdlorganization
        cdltimestamp: cdltimestamp
        cdldatamodelversion: cdldatamodelversion
        cdleventtype: cdleventtype
        cdlpreviousevents:
        - cdlpreviousevents
        - cdlpreviousevents
        cdleventid: 194430e2-0f28-4bd4-8674-6ef6ec0198b0
        cdldatatags:
        - cdluri: http://example.com/pa/th/ecaefa29-39af-459b-ab84-b3fa674584f6
          cdlwebdavtimestamp: 2020-08-05T10:57:22+09:00
          cdlsize: 3
          cdlsha256hash: b589b63bc6217ed0be9ed63b6a88984fc61e0732bbb5a7fb05a19c7b764b9c5b
        - cdluri: http://example.com/pa/th/ecaefa29-39af-459b-ab84-b3fa674584f6
          cdlwebdavtimestamp: 2020-08-05T10:57:22+09:00
          cdlsize: 3
          cdlsha256hash: b589b63bc6217ed0be9ed63b6a88984fc61e0732bbb5a7fb05a19c7b764b9c5b
    CDLEventList:
      type: array
      items:
        $ref: '#/components/schemas/CDLEvent'
    body:
      required:
      - selector
      type: object
      properties:
        selector:
          type: object

